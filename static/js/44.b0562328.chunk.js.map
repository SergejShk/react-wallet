{"version":3,"file":"static/js/44.b0562328.chunk.js","mappings":"kOACA,EAAuB,qCAAvB,EAAmE,qCAAnE,EAAkH,wCAAlH,EAAgK,oCAAhK,EAA4M,sCAA5M,EAA+P,2CAA/P,EAAiT,qCAAjT,EAAiW,yCAAjW,EAAoZ,wCAApZ,EAAmc,qC,wCCDtbA,EAAqB,SAAAC,GAAK,OACrCC,QAAQD,EAAME,aAAaC,MAAMC,QAAUJ,EAAME,aAAaG,QAAQD,SCAxE,EAA4B,+BAA5B,EAAiE,yB,SCcjE,EAboB,SAAC,GAAoC,IAAlCE,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,cAClC,OACE,iBAAKC,UAAWC,EAAhB,WACE,mBAAQD,UAAWC,EAAOC,KAAK,SAASC,QAASL,EAAjD,mBAGA,mBAAQE,UAAWC,EAAOC,KAAK,SAASC,QAASJ,EAAjD,wBCuFN,EAhF+B,WAC7B,IAAQK,GAAcC,EAAAA,EAAAA,MAAdD,UAEFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXf,GAAegB,EAAAA,EAAAA,KAAY,SAAAlB,GAAK,OAAIA,EAAME,aAAaU,MACvDO,GAAkBD,EAAAA,EAAAA,IAAYnB,GAEpC,GAAoCqB,EAAAA,EAAAA,UAAS,MAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAEMC,EAAgC,UAAdX,EAAwB,QAAU,UAW1D,OAJAY,EAAAA,EAAAA,YAAU,WACHL,GAAiBH,GAASS,EAAAA,EAAAA,SAC9B,CAACT,EAAUG,KAGZ,iBAAKX,UAAU,YAAf,WACE,SAACkB,EAAA,EAAD,CACEC,MAAK,uBAAkBJ,GACvBK,KAAM,sBAER,eAAIpB,UAAWC,EAAf,SACGP,EAAa2B,KAAI,SAACC,EAAIC,GACrB,IAAMC,EAAMC,GAAAA,CAAOH,EAAGI,MAAMC,OAAO,oBAInC,OACE,gBAEE3B,UAAWC,EACX2B,MAAO,CAAEC,SAAU,YACnB1B,QAAS,SAAA2B,GACHA,EAAEC,SAAWD,EAAEE,eACnBlB,EAAc,OANlB,WASE,4BACE,yBACGU,GACD,kBAAMxB,UAAWC,EAAjB,cAA2BqB,EAAGW,KAA9B,WAEF,eAAGjC,UAAWC,EAAd,UAA0BqB,EAAGY,QAA7B,WAGF,iBAAKlC,UAAWC,EAAhB,WACE,iBAAKD,UAAWC,EAAhB,WACE,eAAGD,UAAWC,EAAd,UAAuBqB,EAAGa,KAA1B,QACA,eAAGnC,UAAWC,EAAd,UAA2BqB,EAAGc,SAA9B,WAEF,mBACElC,KAAK,SACLF,UAAWC,EACXE,QAAS,kBAAMW,EAAcQ,EAAGe,KAHlC,UAKE,gBAAKrC,UAAWC,EAAhB,UACE,gBAAKqC,KAAMC,EAAAA,EAAS,iCAIzB1B,IAAeS,EAAGe,KACjB,SAAC,EAAD,CACEtC,cAtCc,kBAlBNsC,EAkB4Bf,EAAGe,GAjBvC,UAAdjC,GAAyBI,GAASgC,EAAAA,EAAAA,IAAiBH,SACrC,YAAdjC,GAA2BI,GAASiC,EAAAA,EAAAA,IAAmBJ,KAFjC,IAAAA,GAyDRvC,YAtCY,kBAAMQ,EAAS,SAAD,OAAUgB,EAAGlB,UAAb,YAA0BkB,EAAGe,GAA7B,WAIzBd","sources":["webpack://react-homework-template/./src/components/TransactionHistoryPage/TransactionHistoryPage.module.css?e7c2","redux/transactions/transactionsSelectors.js","webpack://react-homework-template/./src/components/ContextMenu/ContextMenu.module.css?42cf","components/ContextMenu/ContextMenu.jsx","components/TransactionHistoryPage/TransactionHistoryPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"TransactionHistoryPage_list__ob3PD\",\"item\":\"TransactionHistoryPage_item__99fLp\",\"btnInfo\":\"TransactionHistoryPage_btnInfo__3KDv7\",\"svg\":\"TransactionHistoryPage_svg__Exovm\",\"right\":\"TransactionHistoryPage_right__4KnHV\",\"rightBlock\":\"TransactionHistoryPage_rightBlock__0Dea5\",\"summ\":\"TransactionHistoryPage_summ__T0MQt\",\"currency\":\"TransactionHistoryPage_currency__iHobv\",\"comment\":\"TransactionHistoryPage_comment__jYVFm\",\"span\":\"TransactionHistoryPage_span__eNhzg\"};","export const getHasTransactions = state =>\n  Boolean(state.transactions.costs.length || state.transactions.incomes.length);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContextMenu_container__OazjV\",\"btn\":\"ContextMenu_btn__LZP81\"};","import s from './ContextMenu.module.css';\n\nconst ContextMenu = ({ onEditClick, onRemoveClick }) => {\n  return (\n    <div className={s.container}>\n      <button className={s.btn} type=\"button\" onClick={onEditClick}>\n        Edit\n      </button>\n      <button className={s.btn} type=\"button\" onClick={onRemoveClick}>\n        Remove\n      </button>\n    </div>\n  );\n};\n\nexport default ContextMenu;\n","import moment from 'moment';\nimport Header from '../Header/Header';\nimport sprite from '../../assets/sprite.svg';\nimport s from './TransactionHistoryPage.module.css';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useState, useEffect } from 'react';\nimport {\n  getTransactionsThunk,\n  removeCostsThunk,\n  removeIncomesThunk,\n} from 'redux/transactions/transactionsOperations';\nimport { getHasTransactions } from 'redux/transactions/transactionsSelectors';\nimport ContextMenu from '../ContextMenu/ContextMenu';\n\nconst TransactionHistoryPage = () => {\n  const { transType } = useParams();\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const transactions = useSelector(state => state.transactions[transType]);\n  const hasTransactions = useSelector(getHasTransactions);\n\n  const [openMenuId, setOpenMenuId] = useState(null);\n\n  const transactionName = transType === 'costs' ? 'Costs' : 'Incomes';\n\n  const handleRemoveBtn = id => {\n    transType === 'costs' && dispatch(removeCostsThunk(id));\n    transType === 'incomes' && dispatch(removeIncomesThunk(id));\n  };\n\n  useEffect(() => {\n    if (!hasTransactions) dispatch(getTransactionsThunk());\n  }, [dispatch, hasTransactions]);\n\n  return (\n    <div className=\"container\">\n      <Header\n        title={`Transaction  ${transactionName}`}\n        icon={'#icon-arrow-left'}\n      />\n      <ul className={s.list}>\n        {transactions.map((el, idx) => {\n          const day = moment(el.date).format('dd, DD MMM. YYYY');\n          const onRemoveClick = () => handleRemoveBtn(el.id);\n          const onEditClick = () => navigate(`/edit/${el.transType}/${el.id}/`);\n\n          return (\n            <li\n              key={idx}\n              className={s.item}\n              style={{ position: 'relative' }}\n              onClick={e => {\n                if (e.target !== e.currentTarget) return;\n                setOpenMenuId(null);\n              }}\n            >\n              <div>\n                <p>\n                  {day}\n                  <span className={s.span}> {el.time} </span>\n                </p>\n                <p className={s.comment}>{el.comment} </p>\n              </div>\n\n              <div className={s.right}>\n                <div className={s.rightBlock}>\n                  <p className={s.summ}>{el.summ} </p>\n                  <p className={s.currency}>{el.currency} </p>\n                </div>\n                <button\n                  type=\"button\"\n                  className={s.btnInfo}\n                  onClick={() => setOpenMenuId(el.id)}\n                >\n                  <svg className={s.svg}>\n                    <use href={sprite + '#icon-navigation-more'} />\n                  </svg>\n                </button>\n              </div>\n              {openMenuId === el.id && (\n                <ContextMenu\n                  onRemoveClick={onRemoveClick}\n                  onEditClick={onEditClick}\n                />\n              )}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default TransactionHistoryPage;\n"],"names":["getHasTransactions","state","Boolean","transactions","costs","length","incomes","onEditClick","onRemoveClick","className","s","type","onClick","transType","useParams","navigate","useNavigate","dispatch","useDispatch","useSelector","hasTransactions","useState","openMenuId","setOpenMenuId","transactionName","useEffect","getTransactionsThunk","Header","title","icon","map","el","idx","day","moment","date","format","style","position","e","target","currentTarget","time","comment","summ","currency","id","href","sprite","removeCostsThunk","removeIncomesThunk"],"sourceRoot":""}